basePath: /
definitions:
  model.Response:
    properties:
      message:
        type: string
    type: object
  model.ResponseID:
    properties:
      id:
        type: integer
    type: object
  model.Subscription:
    properties:
      end_date:
        type: string
      id:
        type: integer
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  model.SubscriptionRequest:
    properties:
      end_date:
        type: string
      price:
        type: integer
      service_name:
        type: string
      start_date:
        description: '"07-2025"'
        type: string
      user_id:
        type: string
    type: object
  model.SumResponse:
    properties:
      total:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a service for aggregating user online subscriptions.
  title: Subscription Aggregation Service API
  version: "1.0"
paths:
  /subscriptions:
    get:
      description: Get a list of all subscriptions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Subscription'
            type: array
        "500":
          description: Could not list subscriptions
          schema:
            $ref: '#/definitions/model.Response'
      summary: List all subscriptions
      tags:
      - Subscriptions
    post:
      consumes:
      - application/json
      description: Adds a new subscription to the database
      parameters:
      - description: Subscription Info
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/model.SubscriptionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Returns the ID of the created subscription
          schema:
            $ref: '#/definitions/model.ResponseID'
        "400":
          description: Invalid input or date format
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Could not create subscription
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create a new subscription
      tags:
      - Subscriptions
  /subscriptions/{id}:
    delete:
      description: Delete a subscription by its ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Could not delete subscription
          schema:
            $ref: '#/definitions/model.Response'
      summary: Delete a subscription
      tags:
      - Subscriptions
    get:
      description: Get details of a specific subscription by its ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Subscription'
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Subscription not found
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get a subscription by ID
      tags:
      - Subscriptions
    put:
      consumes:
      - application/json
      description: Update an existing subscription by its ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      - description: Subscription Info to update
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/model.SubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Subscription'
        "400":
          description: Invalid input or ID format
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Could not update subscription
          schema:
            $ref: '#/definitions/model.Response'
      summary: Update a subscription
      tags:
      - Subscriptions
  /subscriptions/sum:
    get:
      description: Calculates the sum of subscription prices for a given period, with
        optional filters for user_id and service_name.
      parameters:
      - description: Start period (MM-YYYY)
        example: '"07-2025"'
        in: query
        name: from
        required: true
        type: string
      - description: End period (MM-YYYY)
        example: '"08-2025"'
        in: query
        name: to
        required: true
        type: string
      - description: User ID (UUID)
        example: '"60601fee-2bf1-4721-ae6f-7636e79a0cba"'
        in: query
        name: user_id
        type: string
      - description: Service Name
        example: '"Yandex Plus"'
        in: query
        name: service_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SumResponse'
        "400":
          description: Invalid query params or date format
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Failed to calculate amount
          schema:
            $ref: '#/definitions/model.Response'
      summary: Calculate total subscription cost
      tags:
      - Subscriptions
swagger: "2.0"
